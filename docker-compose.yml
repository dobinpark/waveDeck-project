version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: dockerfile
    ports:
      - '${PORT:-3000}:${PORT:-3000}'
    environment:
      DB_HOST: db
      DB_PORT: 3306
      DB_USERNAME: ${DB_USERNAME:-nestjs_user}
      DB_PASSWORD: ${DB_PASSWORD:-nestjs_password}
      DB_DATABASE: ${DB_DATABASE:-wavedeck}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${PORT:-3000}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:${PORT:-3000}/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  db:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-ddgh930810}
      MYSQL_DATABASE: ${DB_DATABASE:-wavedeck}
      MYSQL_USER: ${DB_USERNAME:-nestjs_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-nestjs_password}
    ports:
      - '${DB_PORT:-3306}:3306'
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${DB_USERNAME:-nestjs_user}", "-p${DB_PASSWORD:-nestjs_password}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis-cache
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

volumes:
  mysql_data:
  redis_data:
